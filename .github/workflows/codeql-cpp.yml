
# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL-CPP"

on:
  push:
    branches: [ "develop", "main"]
  pull_request:
    branches: [ "develop", "main" ]
  schedule:
    - cron: '25 16 * * 2'
  workflow_dispatch:

jobs:
  analyze:
    name: Analyze
    # Runner size impacts CodeQL analysis time. To learn more, please see:
    #   - https://gh.io/recommended-hardware-resources-for-running-codeql
    #   - https://gh.io/supported-runners-and-hardware-resources
    #   - https://gh.io/using-larger-runners
    # Consider using larger runners for possible analysis time improvements.
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    permissions:
      # required for all workflows
      security-events: write

      # only required for workflows in private repositories
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        language: [ 'c-cpp' ]
        # CodeQL supports [ 'c-cpp', 'csharp', 'go', 'java-kotlin', 'javascript-typescript', 'python', 'ruby', 'swift' ]
        # Use only 'java-kotlin' to analyze code written in Java, Kotlin or both
        # Use only 'javascript-typescript' to analyze code written in JavaScript, TypeScript or both
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install and Build gRPC and Protobufs
      run: |
        cd ~
        echo "Install and Build gRPC and Protobufs"
        export MY_INSTALL_DIR=$HOME/.local
        mkdir -p $MY_INSTALL_DIR
        export PATH="$MY_INSTALL_DIR/bin:$PATH"
        sudo apt install -y build-essential autoconf libtool pkg-config
        sudo apt-get install ninja-build
        git clone --recurse-submodules -b v1.62.0 --depth 1 --shallow-submodules https://github.com/grpc/grpc
        cd grpc
        mkdir -p cmake/build
        pushd cmake/build
        cmake -DgRPC_INSTALL=ON -DgRPC_BUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=$MY_INSTALL_DIR -G Ninja ../..
        ninja
        sudo ninja install
        popd
   
    - name: Install and Build jwt-cpp
      run: |
        cd ~
        echo "Install and Build jwt-cpp"
        sudo apt-get install libssl-dev
        git clone https://github.com/Thalhammer/jwt-cpp && cd jwt-cpp && mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=Release -G Ninja ..  && ninja && sudo ninja install

    - name: Install Codegen
      run: |
        cd ~
        cd ./work/Catena/Catena/tools/codegen
        echo "Install Codegen"
        npm install  

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        debug: true

    - name: Scan cpp sdk with CodeQL
      run: |
        echo "Run, Build Application using Ninja"
        cd ~
        cd ./work/Catena/Catena/sdks/cpp
        mkdir -p build
        cd build
        cmake -DUNIT_TESTING=OFF -DBUILD_DOC=OFF -DCONNECTIONS=gRPC -DCATENA_MODELS="lite" -G Ninja ..
        ninja

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"

