name: C++ Code Analysis
# this runs the workflow on PR and make sure that the code is tested and analyzed

on:
  pull_request:
    files:
      - 'sdks/cpp/**'

jobs:
  Trivy:
    name: Trivy vulnerability scanner
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'HIGH,CRITICAL'
          skip-dirs: '.git,build,coverage,docs,sdks/java,unittests'
          skip-files: 'pom.xml'

      - name: Upload SARIF results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif
          category: 'Trivy Scan Results'

  Unit-Tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/rossvideo/catena-toolchain-cpp:latest

    env:
      CMAKE_BUILD_TYPE: Debug
      CONNECTIONS: gRPC;REST
      BUILD_TARGET: build/cpp

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: build
        run: |
          mkdir -p ~/Catena/${BUILD_TARGET}
          cmake -G Ninja \
            -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} \
            -DCONNECTIONS=${CONNECTIONS} \
            -DCMAKE_CXX_FLAGS="--coverage" \
            -DCMAKE_C_FLAGS="--coverage" \
            -DCMAKE_EXE_LINKER_FLAGS="--coverage" \
            -DCMAKE_INSTALL_PREFIX=/usr/local/.local \
            -DCMAKE_EXPORT_COMPILE_COMMANDS=TRUE \
            -DGLOG_LOGGING_DIR=${HOME}/Catena/logs \
            -B ~/Catena/${BUILD_TARGET} \
            -S ./sdks/cpp
          cd ~/Catena/${BUILD_TARGET}
          ninja -C ~/Catena/${BUILD_TARGET} -j$(nproc)

      - name: Run Tests
        run: |
          ctest --test-dir ~/Catena/${BUILD_TARGET} -V --rerun-failed > test_results.log
          # check if file contains "100% tests passed"
          if grep -q "100% tests passed" test_results.log; then
            echo "All tests passed!"
          else
            echo "Some tests failed."
            exit 1
          fi

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: cpp-unit-tests-results
          path: test_results.log
          retention-days: 4
        if: failure()

  Coverage:
    name: Generate Coverage Report
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/rossvideo/catena-toolchain-cpp:latest

    env:
      CMAKE_BUILD_TYPE: Debug
      CONNECTIONS: gRPC;REST
      BUILD_TARGET: build/cpp

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: build
        run: |
          mkdir -p ~/Catena/${BUILD_TARGET}
          cmake -G Ninja \
            -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} \
            -DCONNECTIONS=${CONNECTIONS} \
            -DCMAKE_CXX_FLAGS="--coverage" \
            -DCMAKE_C_FLAGS="--coverage" \
            -DCMAKE_EXE_LINKER_FLAGS="--coverage" \
            -DCMAKE_INSTALL_PREFIX=/usr/local/.local \
            -DCMAKE_EXPORT_COMPILE_COMMANDS=TRUE \
            -DGLOG_LOGGING_DIR=${HOME}/Catena/logs \
            -B ~/Catena/${BUILD_TARGET} \
            -S ./sdks/cpp
          cd ~/Catena/${BUILD_TARGET}
          ninja -C ~/Catena/${BUILD_TARGET} -j$(nproc)

      - name: Run Tests for Coverage
        run: |
          ctest --test-dir ~/Catena/${BUILD_TARGET} -V

      - name: Generate Coverage Report
        run: |
          gcovr --root ~/Catena \
          --filter sdks/cpp -e '(.+/)?build/' -e '(.+/)?tests/' -e '(.+/)?examples/' \
          --lcov=coverage.info \
          --cobertura=coverage.xml \
          --html=index.html \
          --html-details

      - name: Code Coverage Summary Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage.xml
      
      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: |
            index.html
            index.css
            coverage.xml
            coverage.info
          retention-days: 60

  CodeQL:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/rossvideo/catena-toolchain-cpp:latest

    env:
      CMAKE_BUILD_TYPE: Debug
      CONNECTIONS: gRPC;REST
      BUILD_TARGET: build/cpp

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: cpp
      
      - name: build
        run: |
          mkdir -p ~/Catena/${BUILD_TARGET}
          cmake -G Ninja \
            -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} \
            -DCONNECTIONS=${CONNECTIONS} \
            -DCMAKE_CXX_FLAGS="--coverage" \
            -DCMAKE_C_FLAGS="--coverage" \
            -DCMAKE_EXE_LINKER_FLAGS="--coverage" \
            -DCMAKE_INSTALL_PREFIX=/usr/local/.local \
            -DCMAKE_EXPORT_COMPILE_COMMANDS=TRUE \
            -DGLOG_LOGGING_DIR=${HOME}/Catena/logs \
            -B ~/Catena/${BUILD_TARGET} \
            -S ./sdks/cpp
          cd ~/Catena/${BUILD_TARGET}
          ninja -C ~/Catena/${BUILD_TARGET} -j$(nproc)

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3