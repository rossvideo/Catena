name: C++ Unit Tests

on:
  push:
    branches:
      - test_trivy_pipeline

jobs:
  cpp-unit-tests:
    name: C++ Unit Tests
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/rossvideo/catena-toolchain-cpp:latest

    env:
      CMAKE_BUILD_TYPE: Debug
      CONNECTIONS: gRPC;REST
      BUILD_TARGET: build/cpp

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure and Build
        run: |
          mkdir -p ~/Catena/${BUILD_TARGET}
          cmake -G Ninja \
            -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} \
            -DCONNECTIONS=${CONNECTIONS} \
            -DCMAKE_CXX_FLAGS="--coverage" \
            -DCMAKE_C_FLAGS="--coverage" \
            -DCMAKE_EXE_LINKER_FLAGS="--coverage" \
            -DCMAKE_INSTALL_PREFIX=/usr/local/.local \
            -DCMAKE_EXPORT_COMPILE_COMMANDS=TRUE \
            -DGLOG_LOGGING_DIR=${HOME}/Catena/logs \
            -B ~/Catena/${BUILD_TARGET} \
            -S ./sdks/cpp
          ninja -C ~/Catena/${BUILD_TARGET} -j$(nproc)

      - name: Run Tests
        run: |
          ctest --test-dir ~/Catena/${BUILD_TARGET} -V > test_results.log
          # check if file contains "100% tests passed"
          if grep -q "100% tests passed" test_results.log; then
            echo "All tests passed!"
          else
            echo "Some tests failed."
            exit 1
          fi

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: cpp-unit-tests-results
          path: test_results.log
        if: failure()
      
      - name: run coverage report
        run: |
          gcovr --root ~/Catena --filter sdks/cpp -e '(.+/)?build/' -e '(.+/)?tests/' -e '(.+/)?examples/' --lcov=coverage/coverage.info --xml=coverage/coverage.xml
      
      - name: upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: cpp-coverage-report
          path: coverage/coverage.xml

      - name: Report coverage to GitHub PR
        uses: romeovs/lcov-reporter-action@v0.2.16
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          lcov-file: coverage/coverage.info