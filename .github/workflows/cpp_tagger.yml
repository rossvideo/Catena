#
# Copyright 2024 Ross Video Ltd
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
# this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its contributors
# may be used to endorse or promote products derived from this software without
# specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS”
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, 
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

name: Update the Repository C++ Version when updates to the C++ SDK are pushed to main

on:
  push:
    branches:
      - main
    paths:
      - 'sdks/cpp/**'
      - '.github/workflows/cpp_tagger.yml'


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v4
    
      # Step 2: Generate new version number
      - name: Generate new version number
        # avoid infinite loop when we push the new version file to main at the end of the workflow
        if: ${{ !contains(github.event.head_commit.message, 'Update VERSION.txt') }}
        run: |
          # Get the latest tag or default to "cpp-v0.0.0"
          TAG=$(git describe --tags --match "cpp-*" --abbrev=0 2>/dev/null || echo "cpp-v0.0.0")

          # Decompose the tag into its components
          VERSION=${TAG#cpp-}
          IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"

          # Increment the patch number
          PATCH=$((PATCH + 1))

          # Get the commit count
          COMMIT_COUNT=$(git rev-list --count $(git describe --tags --match "cpp-*" --abbrev=0)..main || echo 0) || echo 0
          echo "Commit count: $COMMIT_COUNT"

          NEW_VERSION="cpp-$MAJOR.$MINOR.$PATCH-$COMMIT_COUNT"

          # Save the new version number
          echo "VERSION=${NEW_VERSION}" >> $GITHUB_ENV
          echo "Generated new version number: $NEW_VERSION"

      # Step 3: Update the version number in the repository and tag it
      - name: Update the version number in the repository
        run: |
          # Update the version number in the VERSION.txt file
          echo $VERSION > sdks/cpp/VERSION.txt

          # Commit the changes
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add sdks/cpp/VERSION.txt

          # tag the repo with the new version number
          git tag -a $VERSION -m "Version $VERSION"

          # this needs to match exactly the condition in the "Generate new version number" step
          git commit -m "Update VERSION.txt"
          git push origin main --tags
