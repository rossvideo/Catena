# This YAML file is used to configure the Envoy proxy server that verifies JWS
# tokens using the AUTHZ server and routes gRPC requests to the gRPC server
# running in the container.

static_resources:

  # Listens to ports 6254-6260, verifies JWS tokens, and routes them to the
  # appropriate clusters.
  listeners:
  - name: listener_status_update
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 6254
    additional_addresses:
    - address:
        socket_address:
          address: 0.0.0.0
          port_value: 6256
    - address:
        socket_address:
          address: 0.0.0.0
          port_value: 6258
    - address:
        socket_address:
          address: 0.0.0.0
          port_value: 6260
    filter_chains:
    # Filters out http requests from the port above.
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          append_x_forwarded_port: true # Append to header for future routing.
          # Required to log info
          access_log:
          - name: envoy.access_loggers.stdout
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
          http_filters:
          # First filter verifies the JWS token. If invalid, it cancels the
          # request.
          - name: envoy.filters.http.jwt_authn
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
              providers:
                jwtProvider:
                  issuer: https://auth.enterprise.rossvideo.cloud/realms/catena
                  remote_jwks:
                    http_uri:
                      uri: https://auth.enterprise.rossvideo.cloud/realms/catena/protocol/openid-connect/certs
                      cluster: jwks_cluster
                      timeout: 5s
                  forward: true
              rules:
              - match:
                  prefix: "/"
                requires:
                  provider_name: jwtProvider
          # If verified, the second filter routes the request.
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          # Routes the valid request to the associated gRPC_custer.
          # Could probably have this seperate REST and gRPC calls.
          route_config:
            name: local_route
            virtual_hosts:
            - name: default
              domains: ["*"]
              routes:
              - match: # Routes port 6254 to the status_update_cluster.
                  prefix: "/"
                  headers:
                  - name: x-forwarded-port
                    string_match: { exact: "6254"} # IN port
                route:
                  cluster: status_update_cluster # The cluster to map it to.

              - match: # Routes port 6256 to the use_menus_cluster.
                  prefix: "/"
                  headers:
                  - name: x-forwarded-port
                    string_match: { exact: "6256"}
                route:
                  cluster: use_menus_cluster
              
              - match: # Routes port 6258 to the structs_with_authz_cluster.
                  prefix: "/"
                  headers:
                  - name: x-forwarded-port
                    string_match: { exact: "6258"}
                route:
                  cluster: structs_with_authz_cluster
              
              - match: # Routes port 6260 to the status_update_cluster.
                  prefix: "/"
                  headers:
                  - name: x-forwarded-port
                    string_match: { exact: "6260"}
                route:
                  cluster: use_commands_cluster

  clusters:
  # Cluster for handling jwks.
  - name: jwks_cluster
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: jwks_cluster
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: auth.enterprise.rossvideo.cloud
                port_value: 443 # JWKS endpoint.
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        sni: auth.enterprise.rossvideo.cloud

  # Cluster for handling authenticated gRPC requests to status_update.
  - name: status_update_cluster
    type: STRICT_DNS
    typed_extension_protocol_options:
      envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
        "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
        explicit_http_config:
          http2_protocol_options: {}
    load_assignment:
      cluster_name: status_update_cluster
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                # Name of the container to pass the call into.
                # Should be connected to catena_prv.
                address: catena_status_update
                # The port value to pass the call through. Default is 6254, and
                # conflict is impossible since containers are isolated.
                port_value: 6254
  
  # Cluster for handling authenticated gRPC requests to use_menus.
  - name: use_menus_cluster
    type: STRICT_DNS
    typed_extension_protocol_options:
      envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
        "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
        explicit_http_config:
          http2_protocol_options: {}
    load_assignment:
      cluster_name: use_menus_cluster
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: catena_use_menus
                port_value: 6254
  
  # Cluster for handling authenticated gRPC requests to structs_with_authz.
  - name: structs_with_authz_cluster
    type: STRICT_DNS
    typed_extension_protocol_options:
      envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
        "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
        explicit_http_config:
          http2_protocol_options: {}
    load_assignment:
      cluster_name: structs_with_authz_cluster
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: catena_structs_with_authz
                port_value: 6254
  
  # Cluster for handling authenticated gRPC requests to use_commands.
  - name: use_commands_cluster
    type: STRICT_DNS
    typed_extension_protocol_options:
      envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
        "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
        explicit_http_config:
          http2_protocol_options: {}
    load_assignment:
      cluster_name: use_commands_cluster
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: catena_use_commands
                port_value: 6254
