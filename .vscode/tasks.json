{
    "tasks": [
        {
            "type": "cppbuild",
            "label": "C/C++: clang++ build active file",
            "command": "/usr/bin/clang++",
            "args": [
                "-fcolor-diagnostics",
                "-fansi-escape-codes",
                "-g",
                "${file}",
                "-o",
                "${fileDirname}/${fileBasenameNoExtension}"
            ],
            "options": {
                "cwd": "${fileDirname}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "detail": "Task generated by Debugger."
        },
        {
            "label": "Run Ninja",
            "type": "shell",
            "command": "cd ${workspaceFolder}/sdks/cpp/build && ninja",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": []
        },
        {
            "label": "Fresh Build",
            "type": "shell",
            // Command breakdown:
            // 1. Change to the cpp directory
            // 2. If build.ninja exists in the build directory:
            //    - Change to build directory
            //    - Run ninja clean to clean the build
            // 3. If build directory doesn't exist:
            //    - Create it
            // 4. Change to build directory
            // 5. Run CMake to generate build files with:
            //    - Ninja as the generator
            //    - Build type from CMAKE_BUILD_TYPE env var
            //    - Connections from CONNECTIONS env var
            //    - Install prefix set to /usr/local/.local
            // 6. Run ninja to build the project
            "command": "cd ${workspaceFolder}/sdks/cpp && if [ -f build/build.ninja ]; then (cd build && ninja clean); fi && if [ ! -d build ]; then mkdir build; fi && cd build && cmake -G Ninja -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE -DCONNECTIONS=$CONNECTIONS -DCMAKE_INSTALL_PREFIX=/usr/local/.local .. && ninja",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": []
        }
    ],
    "version": "2.0.0"
}